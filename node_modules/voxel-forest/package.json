{
  "name": "voxel-forest",
  "version": "0.0.1",
  "description": "generate voxel trees",
  "main": "index.js",
  "devDependencies": {
    "voxel-perlin-terrain": "~0.0.2",
    "voxel-engine": "~0.1.8",
    "voxel-debris": "~0.0.2",
    "ecstatic": "~0.3.0"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/substack/voxel-forest.git"
  },
  "homepage": "https://github.com/substack/voxel-forest",
  "keywords": [
    "voxel",
    "game",
    "tree",
    "forest"
  ],
  "author": {
    "name": "James Halliday",
    "email": "mail@substack.net",
    "url": "http://substack.net"
  },
  "license": "MIT",
  "readme": "# voxel-forest\n\ngenerate voxel trees\n\n# example\n\n[Run this example.](http://substack.net/projects/voxel-forest)\n\n``` js\nvar createTerrain = require('voxel-perlin-terrain');\n\nvar createEngine = require('voxel-engine');\nvar game = createEngine({\n    generateVoxelChunk: createTerrain(2, 32),\n    chunkDistance: 2,\n    materials: [ 'grass_top', 'tree_side', 'leaves_opaque' ],\n    texturePath: './textures/'\n});\ngame.controls.pitchObject.rotation.x = -1.5;\ngame.appendTo('#container');\nwindow.game = game;\n\nvar createTree = require('voxel-forest');\nfor (var i = 0; i < 250; i++) {\n    createTree(game, { bark: 2, leaves: 3 });\n}\n\nvar explode = require('voxel-debris')(game);\ngame.on('mousedown', function (pos) {\n    if (erase) explode(pos)\n    else game.createBlock(pos, 1)\n});\n\nwindow.addEventListener('keydown', ctrlToggle);\nwindow.addEventListener('keyup', ctrlToggle);\n\nvar erase = true\nfunction ctrlToggle (ev) { erase = !ev.ctrlKey }\ngame.requestPointerLock('canvas');\n```\n\n# methods\n\n``` js\nvar createTree = require('voxel-forest')\n```\n\n## createTree(game, opts)\n\nCreate a tree for the [voxel-engine](http://github.com/maxogden/voxel-engine)\ninstance `game` and options `opts`.\n\n`opts.bark` and `opts.leaves` are the voxel data values to use for the tree\nmaterials.\n\n`opts.height` is the number of blocks for the tree to grow up to.\n\n`opts.base` is the block height to start putting foliage around the trunk.\n\n`opts.position` is an object with `x`, `y`, and `z` fields that describes where\nto put the tree. If `opts.position.y` is inside of terrain or suspended in the\nair, the `y` will be cast upward or downward to the terrain surface.\n\nIf `opts.position` isn't given, a random location on the voxel terrain will be\nchosen.\n\n# install\n\nWith [npm](https://npmjs.org) do:\n\n```\nnpm install voxel-forest\n```\n\nUse [browserify](http://browserify.org) to `require('voxel-forest')` in the\nbrowser.\n\n# license\n\nMIT\n",
  "readmeFilename": "readme.markdown",
  "bugs": {
    "url": "https://github.com/substack/voxel-forest/issues"
  },
  "_id": "voxel-forest@0.0.1",
  "dist": {
    "shasum": "44b14a54d638b189b9baa533cf3f28ade442dc93",
    "tarball": "http://registry.npmjs.org/voxel-forest/-/voxel-forest-0.0.1.tgz"
  },
  "_from": "voxel-forest@",
  "_npmVersion": "1.3.7",
  "_npmUser": {
    "name": "substack",
    "email": "mail@substack.net"
  },
  "maintainers": [
    {
      "name": "substack",
      "email": "mail@substack.net"
    }
  ],
  "directories": {},
  "_shasum": "44b14a54d638b189b9baa533cf3f28ade442dc93",
  "_resolved": "https://registry.npmjs.org/voxel-forest/-/voxel-forest-0.0.1.tgz"
}
